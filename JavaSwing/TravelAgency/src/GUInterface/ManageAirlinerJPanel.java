/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUInterface;

import Business.AirLiner;
import Business.Airplane;
import Business.Flight;
import Business.FlightFleet;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AbhilashKosaraju
 */
public class ManageAirlinerJPanel extends javax.swing.JPanel {

    private JPanel UserContainer;
    private FlightFleet Flightfleet;
    private Flight f;
    private Airplane air;
    private String airliner;
    public String Name;
    public String Manu;
    public String License;

    ManageAirlinerJPanel(JPanel UserContainer, FlightFleet Flightfleet) throws IOException {
        initComponents();
        this.UserContainer = UserContainer;
        this.Flightfleet = Flightfleet;
        populateAirlinerTable();

    }

    private void populateAirlinerTable() {
        DefaultTableModel atb = (DefaultTableModel) airlinersTable.getModel();
        atb.setRowCount(0);

        for (AirLiner a : Flightfleet.getFlightfleet()) {
            Object row[] = new Object[4];
            row[0] = a;
            row[1] = a.getLicense();
            row[2] = a.getAvailablity();
            atb.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        airlinersTable = new javax.swing.JTable();
        fetchflightsBtn = new javax.swing.JButton();
        newAirlinerBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        displayBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        airlinerTextField = new javax.swing.JTextField();
        licenseTextFiled = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        avaTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        startPointTextField = new javax.swing.JTextField();
        destinationTextField = new javax.swing.JTextField();
        serialNumberTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        totalSeatsTextField = new javax.swing.JTextField();
        availableTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        updateFlightScheduleBtn = new javax.swing.JButton();
        fetchScheduleBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        reserveTextField = new javax.swing.JTextField();
        saveBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayFlightTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        airlinersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airliner", "License", "Availability"
            }
        ));
        jScrollPane2.setViewportView(airlinersTable);

        fetchflightsBtn.setText("Fetch Flights");
        fetchflightsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchflightsBtnActionPerformed(evt);
            }
        });

        newAirlinerBtn.setText("Create New Airliner");
        newAirlinerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newAirlinerBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        displayBtn.setText("Display Details");
        displayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("       Airline");

        jLabel2.setText("    License");

        jLabel3.setText("      Availability");

        jLabel4.setText("Model");

        jLabel5.setText("Destination");

        jLabel6.setText("StartPoint");

        jLabel7.setText("SerialNumber");

        jLabel8.setText("TotalSeats");

        totalSeatsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalSeatsTextFieldKeyPressed(evt);
            }
        });

        availableTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                availableTextFieldKeyPressed(evt);
            }
        });

        jLabel9.setText("AvailableSeats");

        updateFlightScheduleBtn.setText("Update Flight Schedule");
        updateFlightScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateFlightScheduleBtnActionPerformed(evt);
            }
        });

        fetchScheduleBtn.setText("Fetch Schedule");
        fetchScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchScheduleBtnActionPerformed(evt);
            }
        });

        jLabel10.setText("ReservedSeats");

        reserveTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reserveTextFieldKeyReleased(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        backBtn.setText("<<Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        displayFlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AirlinerName", "Availability", "License", "Model", "Manufactured Year", "Total Seats", "Flight Serial", "Start point", "Start time", "Destination", "Arrival Time", "Reserved Seats", "Available Seats", "cost"
            }
        ));
        jScrollPane1.setViewportView(displayFlightTable);

        jButton1.setText("Add Flights");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(425, 425, 425)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(licenseTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startPointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(156, 156, 156)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(serialNumberTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(availableTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(totalSeatsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                            .addComponent(reserveTextField)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(newAirlinerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(406, 406, 406)
                        .addComponent(fetchScheduleBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backBtn)
                        .addGap(86, 86, 86)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(updateBtn)
                                .addGap(94, 94, 94)
                                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(displayBtn))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1025, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(379, 379, 379)
                        .addComponent(updateFlightScheduleBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(fetchflightsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(309, 309, 309)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(airlinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(avaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(displayBtn)
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(updateBtn)
                            .addComponent(saveBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(backBtn)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(airlinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(licenseTextFiled, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fetchflightsBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fetchScheduleBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(startPointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8)
                                .addComponent(totalSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availableTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(serialNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel4)
                            .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(114, 114, 114)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reserveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(updateFlightScheduleBtn)
                .addGap(39, 39, 39)
                .addComponent(newAirlinerBtn)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fetchflightsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchflightsBtnActionPerformed

        int selectedRow = airlinersTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select any row");
        } else {
            AirLiner aip = (AirLiner) airlinersTable.getValueAt(selectedRow, 0);
            airliner = aip.getName();
            System.out.println(airliner);
            DefaultTableModel dft = (DefaultTableModel) displayFlightTable.getModel();
            dft.setRowCount(0);

            for (AirLiner a : Flightfleet.getFlightfleet()) {
                if (a.getName().equals(airliner)) {

                    Object row[] = new Object[15];

                    row[0] = a;
                    row[1] = a.getAvailablity();
                    row[2] = a.getLicense();
                    row[3] = a.getAp().getModel(); //a.getManufacturedYear();
                    row[4] = a.getAp().getManYear();
                    row[5] = a.getAp().getTotalseats();
                    row[6] = a.getF().getSerialNumber();
                    row[7] = a.getF().getStartpoint();
                    row[8] = a.getF().getDeparttime();
                    row[9] = a.getF().getDestination();
                    row[10] = a.getF().getArrivetime();
                    row[11] = a.getF().getAvailableseats();
                    row[12] = a.getF().getReservedseats();
                    row[13] = a.getF().getSe().getCost();

                    dft.addRow(row);

                }
            }
        }

    }//GEN-LAST:event_fetchflightsBtnActionPerformed

    private void populateFlightSchedule() {
        DefaultTableModel ftb = (DefaultTableModel) displayFlightTable.getModel();
        ftb.setRowCount(0);

        for (AirLiner a : Flightfleet.getFlightfleet()) {
            if (a.getName().equals(airliner)) {

                Object row[] = new Object[15];

                row[0] = a;
                row[1] = a.getAvailablity();
                row[2] = a.getLicense();
                row[3] = a.getAp().getModel();
                row[4] = a.getAp().getManYear();
                row[5] = a.getAp().getTotalseats();
                row[6] = a.getF().getSerialNumber();
                row[7] = a.getF().getStartpoint();
                row[8] = a.getF().getDeparttime();
                row[9] = a.getF().getDestination();
                row[10] = a.getF().getArrivetime();
                row[11] = a.getF().getAvailableseats();
                row[12] = a.getF().getReservedseats();
                row[13] = a.getF().getSe().getCost();
                ftb.addRow(row);

            }

        }
    }


    private void newAirlinerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newAirlinerBtnActionPerformed

        AddAirlinerJPanel panel = new AddAirlinerJPanel(UserContainer, Flightfleet);
        UserContainer.add("AddAirlinerJPanel", panel);
        CardLayout layout = (CardLayout) UserContainer.getLayout();
        layout.next(UserContainer);
    }//GEN-LAST:event_newAirlinerBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        airlinerTextField.setEnabled(true);
        licenseTextFiled.setEnabled(true);
        avaTextField.setEnabled(true);

    }//GEN-LAST:event_updateBtnActionPerformed

    private void displayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = airlinersTable.getSelectedRow();
        if (selectedRow >= 0) {
            AirLiner aip = (AirLiner) airlinersTable.getValueAt(selectedRow, 0);

            Name = aip.getName();
            License = aip.getLicense();
            Manu = aip.getAvailablity();

            System.out.println(Name);

            licenseTextFiled.setText(aip.getLicense());
            avaTextField.setText(aip.getAvailablity());
            airlinerTextField.setText(aip.getName());

        } else {
            JOptionPane.showMessageDialog(null, "Please select the concerned row");
        }

        airlinerTextField.setEnabled(false);
        licenseTextFiled.setEnabled(false);
        avaTextField.setEnabled(false);
    }//GEN-LAST:event_displayBtnActionPerformed


    private void fetchScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchScheduleBtnActionPerformed
        int selectedRow = displayFlightTable.getSelectedRow();
        System.out.println(selectedRow);
        AirLiner aip = (AirLiner) displayFlightTable.getValueAt(selectedRow, 0);

        modelTextField.setText(aip.getAp().getModel());
        startPointTextField.setText(aip.getF().getStartpoint());
        destinationTextField.setText(aip.getF().getDestination());
        serialNumberTextField.setText(String.valueOf(aip.getF().getSerialNumber()));
        totalSeatsTextField.setText(String.valueOf(aip.getAp().getTotalseats()));
        availableTextField.setText(String.valueOf(aip.getF().getAvailableseats()));
        reserveTextField.setText(String.valueOf(aip.getF().getReservedseats()));


    }//GEN-LAST:event_fetchScheduleBtnActionPerformed


    private void updateFlightScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateFlightScheduleBtnActionPerformed

        int selectedRows = displayFlightTable.getSelectedRow();

        AirLiner aip = (AirLiner) displayFlightTable.getValueAt(selectedRows, 0);

        aip.getF().setAvailableseats(Integer.parseInt(availableTextField.getText()));
        aip.getF().setReservedseats(Integer.parseInt(reserveTextField.getText()));
        aip.getF().setDestination(destinationTextField.getText());
        aip.getF().setStartpoint(startPointTextField.getText());
        aip.getAp().setModel(modelTextField.getText());
        aip.getF().setSerialNumber(Integer.parseInt(serialNumberTextField.getText()));
        aip.getAp().setTotalseats(Integer.parseInt(totalSeatsTextField.getText()));

        System.out.println("Bingooo");

        DefaultTableModel dft = (DefaultTableModel) displayFlightTable.getModel();
        dft.setRowCount(0);

        for (AirLiner a : Flightfleet.getFlightfleet()) {
            if (a.getName().equals(airliner)) {

                Object row[] = new Object[15];

                row[0] = a;
                row[1] = a.getAvailablity();
                row[2] = a.getLicense();
                row[3] = a.getAp().getModel(); //a.getManufacturedYear();
                row[4] = a.getAp().getManYear();
                row[5] = a.getAp().getTotalseats();
                row[6] = a.getF().getSerialNumber();
                row[7] = a.getF().getStartpoint();
                row[8] = a.getF().getDeparttime();
                row[9] = a.getF().getDestination();
                row[10] = a.getF().getArrivetime();
                row[11] = a.getF().getAvailableseats();
                row[12] = a.getF().getReservedseats();
                row[13] = a.getF().getSe().getCost();

                dft.addRow(row);

            }
        }
    }//GEN-LAST:event_updateFlightScheduleBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        int selectedRow = airlinersTable.getSelectedRow();
        if (selectedRow >= 0) {
            AirLiner aip = (AirLiner) airlinersTable.getValueAt(selectedRow, 0);

            aip.setLicense(licenseTextFiled.getText());
            aip.setName(airlinerTextField.getText());
            aip.setAvailablity(avaTextField.getText());

        }
        populateAirlinerTable();
    }//GEN-LAST:event_saveBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed

        UserContainer.remove(this);
        CardLayout layout = (CardLayout) UserContainer.getLayout();
        layout.previous(UserContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void totalSeatsTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalSeatsTextFieldKeyPressed

        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            totalSeatsTextField.setEditable(true);
        } else {
            totalSeatsTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            totalSeatsTextField.setText("");
        }

    }//GEN-LAST:event_totalSeatsTextFieldKeyPressed

    private void availableTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_availableTextFieldKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            availableTextField.setEditable(true);
        } else {
            availableTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            availableTextField.setText("");
        }


    }//GEN-LAST:event_availableTextFieldKeyPressed

    private void reserveTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reserveTextFieldKeyReleased

        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            reserveTextField.setEditable(true);
        } else {
            reserveTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            reserveTextField.setText("");
        }


    }//GEN-LAST:event_reserveTextFieldKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int selectedRow = airlinersTable.getSelectedRow();
        AirLiner aip = (AirLiner) airlinersTable.getValueAt(selectedRow, 0);

        Name = aip.getName();
        License = aip.getLicense();
        Manu = aip.getAvailablity();

        System.out.println(Name);

        System.out.println(Name + "passing");
        AddFlightsJPanel panel = new AddFlightsJPanel(UserContainer, Flightfleet, Name, Manu, License);
        UserContainer.add("AddAirlinerJPanel", panel);
        CardLayout layout = (CardLayout) UserContainer.getLayout();
        layout.next(UserContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField airlinerTextField;
    private javax.swing.JTable airlinersTable;
    private javax.swing.JTextField avaTextField;
    private javax.swing.JTextField availableTextField;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField destinationTextField;
    private javax.swing.JButton displayBtn;
    private javax.swing.JTable displayFlightTable;
    private javax.swing.JButton fetchScheduleBtn;
    private javax.swing.JButton fetchflightsBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField licenseTextFiled;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JButton newAirlinerBtn;
    private javax.swing.JTextField reserveTextField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField serialNumberTextField;
    private javax.swing.JTextField startPointTextField;
    private javax.swing.JTextField totalSeatsTextField;
    private javax.swing.JButton updateBtn;
    private javax.swing.JButton updateFlightScheduleBtn;
    // End of variables declaration//GEN-END:variables
}
