/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUInterface;

import Business.AirLiner;
import Business.Airplane;
import Business.Flight;
import Business.FlightFleet;
import java.awt.CardLayout;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sowjanya
 */
public class UpdateFlightJPanel extends javax.swing.JPanel {

    private FlightFleet Flightfleet;
    private JPanel UserContainer;
    private Airplane ap;
    private Flight f;

    UpdateFlightJPanel(JPanel UserContainer, FlightFleet Flightfleet) throws IOException {
        initComponents();
        this.Flightfleet = Flightfleet;
        this.UserContainer = UserContainer;
        Airplane ap = new Airplane();
        Flight f = new Flight();
        populateFlightTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        updateFlightTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        serialTextField = new javax.swing.JTextField();
        destinationTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        startPointTextField = new javax.swing.JTextField();
        airlinerTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        licenseTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        manYearTextField = new javax.swing.JTextField();
        modelTextField = new javax.swing.JTextField();
        totalSeatsTextField = new javax.swing.JTextField();
        availableSeatsTextField = new javax.swing.JTextField();
        reservedSeatsTextField = new javax.swing.JTextField();
        viewBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();

        updateFlightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SerialNumber", "StartPoint", "Destination", "AirLiner", "License", "ManYear", "Modell", "Total Seats", "Available Seats", "Reserved SEats "
            }
        ));
        jScrollPane1.setViewportView(updateFlightTable);

        jLabel4.setText("Serial Number");

        serialTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                serialTextFieldKeyPressed(evt);
            }
        });

        jLabel2.setText("Destination");

        jLabel5.setText("Start Point ");

        jLabel6.setText("Airliner");

        jLabel3.setText("License");

        jLabel8.setText("Manufactured Year");

        jLabel9.setText("Model ");

        jLabel10.setText("Total Seats");

        jLabel7.setText("Available Seats");

        jLabel11.setText("Reserved Seats");

        manYearTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                manYearTextFieldKeyPressed(evt);
            }
        });

        totalSeatsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                totalSeatsTextFieldKeyPressed(evt);
            }
        });

        availableSeatsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                availableSeatsTextFieldKeyPressed(evt);
            }
        });

        reservedSeatsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reservedSeatsTextFieldKeyPressed(evt);
            }
        });

        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 983, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(viewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(192, 192, 192)
                                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(345, 345, 345))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startPointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(airlinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(licenseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(manYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(availableSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(reservedSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(444, 444, 444)
                        .addComponent(saveBtn)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewBtn)
                    .addComponent(updateBtn))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serialTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startPointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(airlinerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(licenseTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(manYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(totalSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(availableSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reservedSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed

        int selectedRow = updateFlightTable.getSelectedRow();

        if (selectedRow >= 0) {
            AirLiner aip = (AirLiner) updateFlightTable.getValueAt(selectedRow, 0);

            serialTextField.setText(String.valueOf(aip.getF().getSerialNumber()));
            startPointTextField.setText(aip.getF().getStartpoint());
            destinationTextField.setText(aip.getF().getDestination());
            airlinerTextField.setText(aip.getName());
            licenseTextField.setText(aip.getLicense());
            manYearTextField.setText(String.valueOf(aip.getAp().getManYear()));
            modelTextField.setText(aip.getAp().getModel());
            totalSeatsTextField.setText(String.valueOf(aip.getAp().getTotalseats()));
            availableSeatsTextField.setText(String.valueOf(aip.getF().getAvailableseats()));
            reservedSeatsTextField.setText(String.valueOf(aip.getF().getReservedseats()));

        } else {
            JOptionPane.showMessageDialog(null, " Please select any row");

        }
        viewBtn.setEnabled(false);
        updateBtn.setEnabled(true);
        saveBtn.setEnabled(false);

    }//GEN-LAST:event_viewBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

        serialTextField.setEnabled(true);
        startPointTextField.setEnabled(true);
        destinationTextField.setEnabled(true);
        airlinerTextField.setEnabled(true);
        licenseTextField.setEnabled(true);
        manYearTextField.setEnabled(true);
        modelTextField.setEnabled(true);
        totalSeatsTextField.setEnabled(true);
        availableSeatsTextField.setEnabled(true);
        reservedSeatsTextField.setEnabled(true);

        viewBtn.setEnabled(false);
        updateBtn.setEnabled(false);
        saveBtn.setEnabled(true);

    }//GEN-LAST:event_updateBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        if (serialTextField.getText().equals("") || startPointTextField.getText().equals("") || destinationTextField.getText().equals("") || airlinerTextField.getText().equals("") || licenseTextField.getText().equals("") || manYearTextField.getText().equals("") || modelTextField.getText().equals("") || totalSeatsTextField.getText().equals("") || reservedSeatsTextField.getText().equals("") || availableSeatsTextField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, " Please fill all the required fields ");
        }

        int selectedRow = updateFlightTable.getSelectedRow();
        if (selectedRow >= 0) {
            AirLiner aip = (AirLiner) updateFlightTable.getValueAt(selectedRow, 0);

            aip.getF().setSerialNumber(Integer.parseInt(serialTextField.getText()));
            aip.getF().setStartpoint(startPointTextField.getText());
            aip.getF().setDestination(destinationTextField.getText());
            aip.setName(airlinerTextField.getText());
            aip.setLicense(licenseTextField.getText());
            aip.getAp().setManYear(Integer.parseInt(manYearTextField.getText()));
            aip.getAp().setModel(modelTextField.getText());
            aip.getAp().setTotalseats(Integer.parseInt(totalSeatsTextField.getText()));
            aip.getF().setAvailableseats(Integer.parseInt(availableSeatsTextField.getText()));
            aip.getF().setReservedseats(Integer.parseInt(reservedSeatsTextField.getText()));

        } else {
            JOptionPane.showMessageDialog(null, " Please select the concerned row");

        }
        populateFlightTable();

    }//GEN-LAST:event_saveBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        UserContainer.remove(this);
        CardLayout layout = (CardLayout) UserContainer.getLayout();
        layout.previous(UserContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void serialTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_serialTextFieldKeyPressed
        // TODO add your handling code here:
        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            serialTextField.setEditable(true);
        } else {
            serialTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            serialTextField.setText("");

        }


    }//GEN-LAST:event_serialTextFieldKeyPressed

    private void manYearTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manYearTextFieldKeyPressed

        if (manYearTextField.getText().length() <= 3) {
            evt.consume();
        } else {
            manYearTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be YYYY ");
            manYearTextField.setText("");
        }
        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            manYearTextField.setEditable(true);
        } else {
            manYearTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            manYearTextField.setText("");

        }


    }//GEN-LAST:event_manYearTextFieldKeyPressed

    private void totalSeatsTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalSeatsTextFieldKeyPressed

        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            totalSeatsTextField.setEditable(true);
        } else {
            totalSeatsTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            totalSeatsTextField.setText("");

        }

    }//GEN-LAST:event_totalSeatsTextFieldKeyPressed

    private void availableSeatsTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_availableSeatsTextFieldKeyPressed

        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            availableSeatsTextField.setEditable(true);
        } else {
            availableSeatsTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            availableSeatsTextField.setText("");

        }


    }//GEN-LAST:event_availableSeatsTextFieldKeyPressed

    private void reservedSeatsTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reservedSeatsTextFieldKeyPressed

        int key = evt.getKeyCode();
        if ((key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key >= evt.VK_0 && key <= evt.VK_9) || (key == evt.VK_BACK_SPACE)) {
            reservedSeatsTextField.setEditable(true);
        } else {
            reservedSeatsTextField.setEditable(false);
            JOptionPane.showMessageDialog(null, " Input format must be numbers");
            reservedSeatsTextField.setText("");

        }

    }//GEN-LAST:event_reservedSeatsTextFieldKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField airlinerTextField;
    private javax.swing.JTextField availableSeatsTextField;
    private javax.swing.JTextField destinationTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField licenseTextField;
    private javax.swing.JTextField manYearTextField;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JTextField reservedSeatsTextField;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField serialTextField;
    private javax.swing.JTextField startPointTextField;
    private javax.swing.JTextField totalSeatsTextField;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTable updateFlightTable;
    private javax.swing.JButton viewBtn;
    // End of variables declaration//GEN-END:variables

    private void populateFlightTable() {

        DefaultTableModel uft = (DefaultTableModel) updateFlightTable.getModel();
        uft.setRowCount(0);

        for (AirLiner a : Flightfleet.getFlightfleet()) {

            Object row[] = new Object[15];

            row[0] = a;
            row[1] = a.getName();
            row[2] = a.getAvailablity();
            row[3] = a.getLicense(); //a.getManufacturedYear();
            row[4] = a.getAp().getModel();
            row[5] = a.getAp().getManYear();
            row[6] = a.getAp().getTotalseats();
            row[7] = a.getF().getSerialNumber();
            row[8] = a.getF().getStartpoint();
            row[9] = a.getF().getDeparttime();
            row[10] = a.getF().getDestination();
            row[11] = a.getF().getArrivetime();
            row[12] = a.getF().getAvailableseats();
            row[13] = a.getF().getReservedseats();
            row[14] = a.getF().getSe().getCost();

            uft.addRow(row);
        }
    }
}
